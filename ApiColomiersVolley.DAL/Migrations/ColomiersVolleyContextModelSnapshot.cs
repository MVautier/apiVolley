// <auto-generated />
using System;
using ApiColomiersVolley.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiColomiersVolley.DAL.Migrations
{
    [DbContext(typeof(ColomiersVolleyContext))]
    partial class ColomiersVolleyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Adherent", b =>
                {
                    b.Property<int>("IdAdherent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasColumnName("adresse");

                    b.Property<string>("AlertFirstName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("alert_prenom");

                    b.Property<string>("AlertLastName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("alert_nom");

                    b.Property<string>("AlertPhone")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("alert_phone");

                    b.Property<string>("Authorization")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("autorisation_sortie");

                    b.Property<DateTime?>("BirthdayDate")
                        .HasColumnType("datetime")
                        .HasColumnName("date_naissance");

                    b.Property<DateTime?>("CertificateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("date_certificat");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ville");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("prenom");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("genre");

                    b.Property<DateTime?>("HealthStatementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("date_questionnaire");

                    b.Property<int?>("IdCategory")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("id_categorie");

                    b.Property<int?>("IdSection")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("id_section");

                    b.Property<bool?>("ImageRight")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("image_right");

                    b.Property<DateTime?>("InscriptionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("date_inscription");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nom");

                    b.Property<string>("Licence")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("licence");

                    b.Property<string>("ParentPhone")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tel_parent");

                    b.Property<string>("Payment")
                        .HasColumnType("varchar(25)")
                        .HasColumnName("paiement");

                    b.Property<string>("PaymentComment")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("verif_paiement");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel");

                    b.Property<string>("Photo")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("photo");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cp");

                    b.Property<bool?>("Rgpd")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("rgpd");

                    b.Property<int?>("Saison")
                        .HasColumnType("int")
                        .HasColumnName("saison");

                    b.Property<string>("Sections")
                        .HasColumnType("varchar(400)")
                        .HasColumnName("sections");

                    b.Property<string>("Signature")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("signature");

                    b.Property<string>("Team1")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("equipe1");

                    b.Property<string>("Team2")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("equipe2");

                    b.Property<string>("Uid")
                        .HasColumnType("varchar(36)")
                        .HasColumnName("uid");

                    b.HasKey("IdAdherent");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdSection");

                    b.ToTable("adherent");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.ArticlePage", b =>
                {
                    b.Property<int>("IdArticlePage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdArticle")
                        .HasColumnType("int")
                        .HasColumnName("idpost");

                    b.Property<int>("IdPage")
                        .HasColumnType("int")
                        .HasColumnName("idpage");

                    b.HasKey("IdArticlePage");

                    b.ToTable("article_page");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("code");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("libelle");

                    b.HasKey("IdCategory");

                    b.ToTable("categorie");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Connexion", b =>
                {
                    b.Property<int>("IdConnexion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("beginDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip");

                    b.Property<DateTime>("LastRefresh")
                        .HasColumnType("datetime")
                        .HasColumnName("lastRefresh");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("login");

                    b.Property<int>("RefreshCount")
                        .HasColumnType("int")
                        .HasColumnName("refreshCount");

                    b.HasKey("IdConnexion");

                    b.ToTable("connexion");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Author")
                        .HasColumnType("int")
                        .HasColumnName("author");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(800)")
                        .HasColumnName("description");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    b.Property<int?>("IdParent")
                        .HasColumnType("int")
                        .HasColumnName("idParent");

                    b.Property<int?>("IdPost")
                        .HasColumnType("int")
                        .HasColumnName("idPost");

                    b.Property<string>("Ip")
                        .HasColumnType("varchar(800)")
                        .HasColumnName("ip");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime")
                        .HasColumnName("modified");

                    b.Property<int?>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<bool?>("Public")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("public");

                    b.Property<string>("Resume")
                        .HasColumnType("varchar(800)")
                        .HasColumnName("resume");

                    b.Property<string>("Slug")
                        .HasColumnType("varchar(800)")
                        .HasColumnName("slug");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("IdItem");

                    b.ToTable("item");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Section", b =>
                {
                    b.Property<int>("IdSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("libelle");

                    b.HasKey("IdSection");

                    b.ToTable("section");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Token", b =>
                {
                    b.Property<int>("IdToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("beginDate");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<int>("IdConnexion")
                        .HasColumnType("int")
                        .HasColumnName("idConnexion");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("key");

                    b.HasKey("IdToken");

                    b.ToTable("token");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<string>("Mail")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("mail");

                    b.Property<string>("Nom")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nom");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<string>("Prenom")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("prenom");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("IdUser");

                    b.ToTable("user");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Adherent", b =>
                {
                    b.HasOne("ApiColomiersVolley.DAL.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiColomiersVolley.DAL.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("IdSection")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Section");
                });
#pragma warning restore 612, 618
        }
    }
}
