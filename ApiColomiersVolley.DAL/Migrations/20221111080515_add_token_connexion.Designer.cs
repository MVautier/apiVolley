// <auto-generated />
using System;
using ApiColomiersVolley.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiColomiersVolley.DAL.Migrations
{
    [DbContext(typeof(ColomiersVolleyContext))]
    [Migration("20221111080515_add_token_connexion")]
    partial class add_token_connexion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Connexion", b =>
                {
                    b.Property<int>("IdConnexion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("beginDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip");

                    b.Property<DateTime>("LastRefresh")
                        .HasColumnType("datetime")
                        .HasColumnName("lastRefresh");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("login");

                    b.Property<int>("RefreshCount")
                        .HasColumnType("int")
                        .HasColumnName("refreshCount");

                    b.HasKey("IdConnexion");

                    b.ToTable("connexion");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Author")
                        .HasColumnType("int")
                        .HasColumnName("author");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(800)")
                        .HasColumnName("description");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    b.Property<int?>("IdParent")
                        .HasColumnType("int")
                        .HasColumnName("idParent");

                    b.Property<int?>("IdPost")
                        .HasColumnType("int")
                        .HasColumnName("idPost");

                    b.Property<string>("Ip")
                        .HasColumnType("varchar(800)")
                        .HasColumnName("ip");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime")
                        .HasColumnName("modified");

                    b.Property<int?>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<bool?>("Public")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("public");

                    b.Property<string>("Resume")
                        .HasColumnType("varchar(800)")
                        .HasColumnName("resume");

                    b.Property<string>("Slug")
                        .HasColumnType("varchar(800)")
                        .HasColumnName("slug");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("IdItem");

                    b.ToTable("item");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.Token", b =>
                {
                    b.Property<int>("IdToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("beginDate");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<int>("IdConnexion")
                        .HasColumnType("int")
                        .HasColumnName("idConnexion");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("key");

                    b.HasKey("IdToken");

                    b.ToTable("token");
                });

            modelBuilder.Entity("ApiColomiersVolley.DAL.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate");

                    b.Property<string>("Mail")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("mail");

                    b.Property<string>("Nom")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nom");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<string>("Prenom")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("prenom");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("IdUser");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
